@using BlogProject.Models
@using BlogProject.Services
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject IImageService imageService
@model IPagedList<Blog>

@{
    ViewData["Title"] = "Home Page";
}
<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">
            @foreach(var blog in Model)
            {
                @*<div class="post-preview">
                    <a asp-controller="Posts" asp-action="BlogPostIndex" asp-route-id="@blog.Id">
                        <img class="img-thumbnail" width="50%" src="@imageService.DecodeImage(blog.ImageData, blog.ContentType)" />
                        <h2 class="post-title">@blog.Name</h2>
                        <h3 class="post-subtitle">@blog.Description</h3>
                    </a>
                    <p class="post-meta"> Posted by <a href="#!">@blog.BlogUser.DisplayName</a> on @blog.CreatedDate.ToString("dd.MM.yyyy") </p>
                </div>

                <hr class="my-4" />*@

                <div class="card mb-3">
                    <img src="@imageService.DecodeImage(blog.ImageData, blog.ContentType)" class="card-img-top" alt="...">
                    <div class="card-body">
                        <a asp-controller="Posts" asp-action="BlogPostIndex" asp-route-id="@blog.Id">
                            <h5 class="card-title">@blog.Name</h5>
                            <p class="card-text">@blog.Description</p>
                        </a>
                        <p class="card-text"><small class="text-muted">Posted by <a href="#!">@blog.BlogUser.DisplayName</a> on @blog.CreatedDate.ToString("dd.MM.yyyy")</small></p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="row">
    <div class="col h5">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
        new PagedListRenderOptions
        {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link"}
        })
    </div>
</div>