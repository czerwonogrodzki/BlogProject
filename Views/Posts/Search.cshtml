@using BlogProject.Models
@using BlogProject.Services
@using BlogProject.Enums
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common


@inject IImageService imageService

@model IPagedList<Post>

@{
    ViewData["Title"] = "Search Results";
}

<div class="row">
    @foreach (var post in Model)
    {
        <div class="col-sm-2 col-lg-4 mt-3">
            <div class="card mb-3">
                <img src="@imageService.DecodeImage(post.ImageData, post.ContentType)" class="card-img-top" alt="...">
                <div class="card-body">
                    <a asp-controller="Posts" asp-action="Details" asp-route-slug="@post.Slug">
                        <h5 class="card-title">@post.Title</h5>
                        <p class="card-text">@post.Abstract</p>
                    </a>
                </div>
            </div>

        </div>
    }
</div>

<hr />

<div class="row">
    <div class="col h5">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("Search", new { page = page, searchTerm = ViewData["SearchTerm"] }),
        new PagedListRenderOptions
        {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
        })
    </div>
</div>